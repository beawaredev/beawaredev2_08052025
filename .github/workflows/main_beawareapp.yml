name: Build and deploy Node.js app to Azure Web App - Beawareapp

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ENV_NAME: dev
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: |
          set -e
          # Ensure local binaries like "vite" and "tsc" are available to any child process (e.g., build-azure.js)
          export PATH="$PWD/node_modules/.bin:$PATH"

          if [ -f "./build-azure.js" ]; then
            echo "Running custom build (build-azure.js)"
            node build-azure.js
          else
            echo "Fallback: Vite + TypeScript build"
            vite build
            tsc -p .
          fi

      - name: Inject version.json (from CI)
        run: |
          set -e
          VERSION="${VERSION:-$(node -p "require('./package.json').version")}"
          BUILD="${GITHUB_RUN_NUMBER}"
          COMMIT="${GITHUB_SHA}"
          BUILT_AT="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          mkdir -p dist/public
          cat > dist/public/version.json <<'JSON'
          {
            "app": "BeAware",
            "environment": "__ENV__",
            "version": "__VERSION__",
            "build": "__BUILD__",
            "commit": "__COMMIT__",
            "builtAt": "__BUILT_AT__"
          }
          JSON
          sed -i "s/__ENV__/${ENV_NAME}/" dist/public/version.json
          sed -i "s/__VERSION__/${VERSION}/" dist/public/version.json
          sed -i "s/__BUILD__/${BUILD}/" dist/public/version.json
          sed -i "s/__COMMIT__/${COMMIT}/" dist/public/version.json
          sed -i "s/__BUILT_AT__/${BUILT_AT}/" dist/public/version.json
          echo "----- dist/public/version.json -----"
          cat dist/public/version.json

      - name: Prune dev dependencies
        run: npm prune --production

      - name: Prepare deploy folder (artifact)
        run: |
          set -e
          rm -rf node-app
          mkdir -p node-app

          # If the repo produced a compiled/ dir (server build), include it
          if [ -d "compiled" ]; then
            cp -r compiled node-app/
          fi

          # Include built frontend
          if [ -d "dist" ]; then
            mkdir -p node-app/dist
            cp -r dist/* node-app/dist/
          fi

          # Runtime files
          cp package*.json node-app/ || true
          [ -f "index.js" ] && cp index.js node-app/
          [ -f "server.js" ] && cp server.js node-app/
          [ -d "node_modules" ] && cp -r node_modules node-app/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: node-app/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: node-app
          path: node-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_35E5315EDCBD454A89028DC816115969 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1215FCCAAF9042179F0D2D36AB844422 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F0168D1E4AD14FB7A3C0BF8FCECF99E5 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Beawareapp'
          slot-name: 'Production'
          package: node-app
