name: Build and deploy Node.js app to Azure Web App (PROD)

on:
  push:
    branches: [ production ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # required for OIDC -> azure/login

env:
  NODE_VERSION: '20.x'
  WEBAPP_NAME: 'beaware-prod-01'   # <-- change to your actual prod web app name
  SLOT_NAME: 'Production'          # keep if you don't use slots
  ARTIFACT_NAME: 'node-app'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: |
          echo "Building frontend with Vite..."
          npx vite build
          echo "Ensuring compiled directory exists..."
          mkdir -p compiled/server compiled/shared
          echo "Compiling TypeScript files..."
          npx tsc --project server/tsconfig.json || echo "TypeScript compilation completed with warnings"
          echo "Verifying build output..."
          ls -la compiled/server/ || true
          ls -la dist/ || true

      - name: Prune dev dependencies
        run: npm prune --production

      - name: Prepare deploy folder
        run: |
          rm -rf deploy && mkdir deploy
          # Copy compiled server files
          if [ -d "compiled" ]; then
            cp -r compiled/* deploy/
          fi
          # Copy frontend build files
          if [ -d "dist" ]; then
            mkdir -p deploy/dist
            cp -r dist/* deploy/dist/
          fi
          # Runtime files
          cp package*.json deploy/ || true
          cp index.js deploy/ 2>/dev/null || echo "index.js not found, skipping"
          cp server.js deploy/ 2>/dev/null || echo "server.js not found, skipping"
          # Production node_modules
          cp -r node_modules deploy/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: deploy/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # If your Entra federated credential uses Environment=prod, uncomment:
    # environment:
    #   name: prod
    #   url: https://${{ env.WEBAPP_NAME }}.azurewebsites.net
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_35E5315EDCBD454A89028DC816115969 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1215FCCAAF9042179F0D2D36AB844422 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F0168D1E4AD14FB7A3C0BF8FCECF99E5 }}

      - name: Deploy to Azure Web App (PROD)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: ${{ env.SLOT_NAME }}
          package: .
